##
# This Dockerfile is used to build the uptime-checker binary for local development.
# It is not used for production. We need this because certain error messages
# are Linux specific so we have to run the binary on Linux to get the correct
# error messages.

# HOW TO USE:
# 1. Build the docker image: `docker build -f Dockerfile.localdev -t my-uptime-checker .`
# 2. Run the container with a mounted volume for src: `docker run -it -v $(pwd)/src:/app/src --entrypoint /bin/sh my-uptime-checker`
# 3. In the container you can do `cargo test`, etc. and updating the src directory on your host will reflect in the container,
# so you can test your changes without having to rebuild the container.
##

FROM rust:1.80-alpine3.20 as builder

# Install system dependencies
RUN apk add --no-cache \
    libc-dev \
    cmake \
    make \
    g++ \
    pkgconfig \
    openssl-dev

# Configure cargo
RUN mkdir -p ~/.cargo && \
    echo '[registries.crates-io]' > ~/.cargo/config && \
    echo 'protocol = "sparse"' >> ~/.cargo/config

WORKDIR /app

# Copy only the files needed for dependency caching
COPY Cargo.toml Cargo.lock ./
COPY redis-test-macro redis-test-macro/

# Create a dummy main.rs to build dependencies
RUN mkdir src && \
    echo "fn main() {}" > src/main.rs && \
    # Build dependencies only
    export RUSTFLAGS="-Ctarget-feature=-crt-static" && \
    export PKG_CONFIG_ALLOW_CROSS=1 && \
    cargo build && \
    rm -rf src/

# Set environment variables
ENV RUSTFLAGS="-Ctarget-feature=-crt-static"
ENV PKG_CONFIG_ALLOW_CROSS=1
ARG UPTIME_CHECKER_GIT_REVISION
ENV UPTIME_CHECKER_GIT_REVISION=$UPTIME_CHECKER_GIT_REVISION
ENV UPTIME_CHECKER_VERSION=0.0.1

# Create and configure the source directory as a volume
RUN mkdir -p /app/src
VOLUME /app/src

# Copy the initial source code (will be overridden by volume mount)
COPY src /app/src

# The final build will happen when the container runs and the volume is mounted
